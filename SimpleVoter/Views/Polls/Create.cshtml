@model SimpleVoter.Core.Models.Poll

@{
    ViewBag.Title = "Create";
}

<header class="main-header text-center">
    <h1 class="main-title">New poll</h1>
    <p class="main-description">Creating new poll.</p>
</header>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <section class="mid-section">
        <fieldset class="new-poll-fieldset col-md-offset-3 col-md-6">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Question)
                    @Html.TextAreaFor(model => model.Question, new { htmlAttributes = new { @class = "form-control question-area" } })
                    @Html.ValidationMessageFor(model => model.Question, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AllowMultipleAnswers)
                    <div class="checkbox">
                        @Html.CheckBoxFor(model => model.AllowMultipleAnswers, htmlAttributes: new { data_toggle = "toggle" })
                    </div>
                    @Html.ValidationMessageFor(model => model.AllowMultipleAnswers, "", new { @class = "text-danger" })
                </div>
                

                <div class="form-group">
                    @Html.LabelFor(model => model.Answers)
                    @Html.EditorFor(model => model.Answers)
                    @Html.ValidationMessageFor(model => model.Answers, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </fieldset>
    </section>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}